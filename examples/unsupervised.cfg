# Training | Testing | Unsupervised
string Mode Unsupervised
#
# For every mode, all files with trajectories has the MOTChallenge format
#
# For Unsupervised, trajectories obtained by some other method, in
# InputTrajectories, are used to iteratively learn the patterns and use them to
# improve the tracking. Improved trajectories are saved into
# OutputTrajectories, learned patterns are saved into OutputPatterns, and full
# result with assignment is saved in FullResult.  If GTTrajectories are
# available, they are used to compute the IDF metric on InputTrajectories and
# OutputTrajectories to see the improvement.
string GTTrajectories data/towncentre/towncentre_001_150/gt/gt.txt
string InputTrajectories data/towncentre/towncentre_001_150/KSP/KSP.txt
string OutputTrajectories output/unsupervised.trajectories
string OutputPatterns output/unsupervised.patterns
string FullResult output/unsupervised.full

# Start unsupervised optimization by trying to fit best patterns with that pattern bound
int Unsupervised.StartPatternCount 2
# End unsupervised optimization by trying to fit best patterns with that pattern bound
int Unsupervised.EndPatternCount 5
# Increase the pattern bound every that many iterations
int Unsupervised.PatternCountIncreaseStep 5
#
# Possible pattern widths
float Training.PatternWidths 2 5 8 11
#
# If we have GT, at which distance do we evaluate the IDF1 metric?
float Parameters.D_match 3
#
# Parameters for computing possible transitions between the detections
# while tracking. Increasing them means more dense tracking graph.
#
# Distance on the ground plane between the detections to be linked in the
# neighbouring frames
float Parameters.D_1 2
# Distance on the ground plane between the ending and starting detections of
# the trajectories to be linked
float Parameters.D_2 4
# Distance in frames between the ending and starting detections of the
# trajectories to be linked
int Parameters.D_t 7
# Whether to ignore in the output the trajectories assigned to no pattern
int Parameters.ignore_no_pattern 0
#
# Debug information
int IO.Stderr 1
int Tracking.Stderr 0
int Pattern.Stderr 0
int Unsupervised.Stderr 1
int      Pattern.Optimizer.SaveModel     0
string   Pattern.Optimizer.ModelPath
int      Pattern.Optimizer.OutputFlag    0
int      Tracking.Optimizer.SaveModel    0
string   Tracking.Optimizer.ModelPath
int      Tracking.Optimizer.OutputFlag   0
# Parameters below were kept fixed for all datasets and methods
#
# How much to penalize going in the direction opposite to the pattern
float Parameters.epsilon 1
# How much to penalize assignment to no pattern when learning the patterns
float Parameters.Training.epsilon_no_pattern 0.3
# How much to penalize assignment to no pattern when tracking given the patterns
float Parameters.Testing.epsilon_no_pattern -3
