# Training | Testing | Unsupervised
string Mode Training
#
# For every mode, all files with trajectories has the MOTChallenge format
#
# For Training, trajectories taken from GTTrajectories (which is a list of
# files) are used to learn the patterns. Patterns are saved into
# OutputPatterns, and full result with assignment is saved into FullResult
#
string GTTrajectories data/towncentre/towncentre_151_300/gt/gt.txt data/towncentre/towncentre_301_450/gt/gt.txt
string OutputPatterns output/learning.patterns
string FullResult output/learning.full


# For training, we search for the set of patterns upper bounded by the maximum
# number of patterns and the maximum area of the patterns, both of which are
# combined into one value of metric. Metric is computed as
# 10000 x number of patterns + width of patterns. Therefore, 49999 practically
#       allows any set of 4 patterns.
float Training.PatternMetricBound 49999
#
# Possible pattern widths, meters
float Training.PatternWidths 2 5 8 11
#
# Parameters for computing possible transitions between the detections
# while tracking. Increasing them means more dense tracking graph.
#
# Distance on the ground plane between the detections to be linked in the
# neighbouring frames
float Parameters.D_1 2
# Distance on the ground plane between the ending and starting detections of
# the trajectories to be linked
float Parameters.D_2 4
# Distance in frames between the ending and starting detections of the
# trajectories to be linked
int Parameters.D_t 7
# Whether to ignore in the output the trajectories assigned to no pattern
int Parameters.ignore_no_pattern 0
#
# Debug information - whether to print gurobi output and model
int      Pattern.Optimizer.SaveModel     0
string   Pattern.Optimizer.ModelPath
int      Pattern.Optimizer.OutputFlag    0
int IO.Stderr 1
int Pattern.Stderr 1
# Parameters below were kept fixed for all datasets and methods
#
# How much to penalize going in the direction opposite to the pattern
float Parameters.epsilon 1
# How much to penalize assignment to no pattern when learning the patterns
float Parameters.Training.epsilon_no_pattern 0.3
# How much to penalize assignment to no pattern when tracking given the patterns
float Parameters.Testing.epsilon_no_pattern -3
